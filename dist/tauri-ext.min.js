const{invoke}=window.__TAURI__.core;const{listen,emit,emitTo}=window.__TAURI__.event;let api;window.addEventListener("DOMContentLoaded",()=>{htmx.defineExtension("tauri",{init(e){api=e},onEvent:(e,t)=>{let i=t.target||t.detail.elt;switch(e){case"htmx:load":registerInvokeTiggers(i);registerTauriListeners(i);registerTauriEmitters(i);break}}})});function registerInvokeTiggers(e){e.querySelectorAll("[tauri-invoke]").forEach(t=>{let i=api.getInternalData(t);let e=api.getTriggerSpecs(t);console.log(e);e.forEach(e=>{if(e.trigger==="load"){callInvoke(t)}api.addTriggerHandler(t,e,i,()=>{callInvoke(t)})})})}function callInvoke(e){let t=api.getAttributeValue(e,"tauri-invoke");let i=api.makeSettleInfo(e);let a=api.getSwapSpecification(e);let l=api.getTarget(e);let r=api.getInputValues(e);invoke(t,r.values).then(e=>{if(e){api.swap(l,e,a)}api.settleImmediately(i.tasks)})}function registerTauriListeners(e){e.querySelectorAll("[tauri-listen]").forEach(r=>{let e=api.getAttributeValue(r,"tauri-listen");listen(e,e=>{let t=e.payload;let i=api.makeSettleInfo(r);let a=api.getSwapSpecification(r);let l=api.getTarget(r);if(t){api.swap(l,t,a)}api.settleImmediately(i.tasks)})})}function registerTauriEmitters(e){e.querySelectorAll("[tauri-emit]").forEach(t=>{let i=api.getInternalData(t);let e=api.getTriggerSpecs(t);e.forEach(e=>{api.addTriggerHandler(t,e,i,()=>{callEmit(t)})})})}function callEmit(e){let t=api.getAttributeValue(e,"tauri-emit");let i=api.getInputValues(e);emit(t,i.values)}